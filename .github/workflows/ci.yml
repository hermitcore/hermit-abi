name: CI

on:
  pull_request:
  merge_group:

env:
  GH_TOKEN: ${{ github.token }}
  RUSTFLAGS: -Dwarnings
  RUSTDOCFLAGS: -Dwarnings

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src
      - uses: mkroening/rust-toolchain-toml@main
      - run: |
          rustup component add clippy llvm-tools
          rustup target add wasm32-wasi
      - name: Clippy
        run: |
          cargo clippy --all-targets
          cargo clippy -Zbuild-std=std,panic_abort --target=x86_64-unknown-hermit --all-targets
          cargo clippy -Zbuild-std=std,panic_abort --target=aarch64-unknown-hermit --all-targets
          cargo clippy -Zbuild-std=std,panic_abort --target=riscv64gc-unknown-hermit --all-targets

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: mkroening/rust-toolchain-toml@main
      - run: rustup component add rustfmt
      - name: Format
        run: cargo fmt -- --check

  check-docs:
    name: Check docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src
      - uses: mkroening/rust-toolchain-toml@main
      - run: |
          rustup component add llvm-tools
          rustup target add wasm32-wasi
      - name: Check docs
        run: cargo doc --no-deps --document-private-items

  run-hermit:
    name: Run
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: kernel
    strategy:
      matrix:
        arch: [x86_64, aarch64, riscv64]
        profile: [dev, release]
        include:
          - arch: x86_64
            packages: qemu-system-x86
            flags: --accel --sudo
          - arch: aarch64
            packages: qemu-system-aarch64
          - arch: riscv64
            packages: qemu-system-misc
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install Packages
        run: |
          sudo apt-get update
          sudo apt-get install ${{ matrix.packages }}
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo +stable install --locked uhyve
        if: matrix.arch == 'x86_64'
      - name: Download loader
        run: gh release download --repo hermit-os/loader --pattern hermit-loader-${{ matrix.arch }}
      - name: Dowload OpenSBI
        if: matrix.arch == 'riscv64'
        run: |
          gh release download v1.4 --repo riscv-software-src/opensbi --pattern 'opensbi-*-rv-bin.tar.xz'
          tar -xvf opensbi-*-rv-bin.tar.xz opensbi-1.4-rv-bin/share/opensbi/lp64/generic/firmware/fw_jump.bin
      - uses: mkroening/rust-toolchain-toml@main
      - uses: mkroening/rust-toolchain-toml@main
        with:
          toolchain-file: 'kernel/rust-toolchain.toml'
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.arch }}-${{ matrix.profile }}
          save-if: ${{ github.ref == 'refs/heads/main' }}
          workspaces: |
            .
            kernel
            kernel/hermit-builtins
      - run: cargo xtask ci qemu --arch ${{ matrix.arch }} --profile ${{ matrix.profile }} ${{ matrix.flags }} --package rusty_demo
      - run: cargo xtask ci qemu --arch ${{ matrix.arch }} --profile ${{ matrix.profile }} ${{ matrix.flags }} --package httpd --features ci,hermit/dhcpv4 --netdev virtio-net-pci
        if: matrix.arch != 'riscv64'
      - run: UHYVE=$CARGO_HOME/bin/uhyve cargo xtask ci uhyve --arch ${{ matrix.arch }} --profile ${{ matrix.profile }} --sudo --package rusty_demo
        if: matrix.arch == 'x86_64'
